{"version":3,"file":"index.js","sources":["../src/js/logger.js","../src/js/store.js"],"sourcesContent":["// @flow\nexport default (state: Object, newState: Object): Object => {\n  console.group(\"Logger\");\n  console.log(\"State:\", JSON.stringify(state, null, 2));\n  console.log(\"New State\", JSON.stringify(newState, null, 2));\n  console.groupEnd();\n};\n","\"use strict\";\n\nexport default (initialState = {}, ...listeners) => {\n  const handler = {\n    set: (target, name, value) => {\n      const oldTarget = Object.assign({}, target);\n      Reflect.set(target, name, value);\n      listeners.forEach(listener => {\n        if (typeof listener === \"function\") {\n          listener(oldTarget, target);\n        } else {\n          throw new Error(\"Listener must be a function!\");\n        }\n      });\n      return {\n        name,\n        value\n      };\n    }\n  };\n  const store = new Proxy({}, handler);\n\n  const getStore = () => {\n    return Object.assign({}, store);\n  };\n\n  const setStore = state => {\n    Object.keys(state).forEach(key => {\n      Reflect.set(store, key, state[key]);\n    });\n    return Object.assign({}, store, state);\n  };\n\n  setStore(initialState);\n\n  return {\n    getStore,\n    setStore\n  };\n};\n"],"names":["state","newState","console","group","log","JSON","stringify","groupEnd","initialState","listeners","store","Proxy","set","target","name","value","oldTarget","Object","assign","Reflect","forEach","listener","Error","setStore","keys","key","getStore"],"mappings":"oEACA,oBAAgBA,EAAeC,GAC7BC,QAAQC,MAAM,UACdD,QAAQE,IAAI,SAAUC,KAAKC,UAAUN,EAAO,KAAM,IAClDE,QAAQE,IAAI,YAAaC,KAAKC,UAAUL,EAAU,KAAM,IACxDC,QAAQK,qCCHMC,yDAAe,sBAAOC,mCAAAA,wBAkB9BC,EAAQ,IAAIC,MAAM,GAjBR,CACdC,IAAK,SAACC,EAAQC,EAAMC,OACZC,EAAYC,OAAOC,OAAO,GAAIL,UACpCM,QAAQP,IAAIC,EAAQC,EAAMC,GAC1BN,EAAUW,QAAQ,SAAAC,MACQ,mBAAbA,QAGH,IAAIC,MAAM,gCAFhBD,EAASL,EAAWH,KAKjB,CACLC,KAAAA,EACAC,MAAAA,MAUAQ,EAAW,SAAAvB,UACfiB,OAAOO,KAAKxB,GAAOoB,QAAQ,SAAAK,GACzBN,QAAQP,IAAIF,EAAOe,EAAKzB,EAAMyB,MAEzBR,OAAOC,OAAO,GAAIR,EAAOV,WAGlCuB,EAASf,GAEF,CACLkB,SAde,kBACRT,OAAOC,OAAO,GAAIR,IAczBa,SAAAA"}